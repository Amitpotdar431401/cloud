
                              Assignment-o4


1. Create a repository by name lab4 on the Github. Create a file by name
results.txt in it. Type some thing into it. Then clone this repository on the local
machine. Modify the results.txt file locally. Then push the modifications to the
remote repository.

Step 1: Create a Repository on GitHub

Step 2: Add a File results.txt to the Repository

Step 3: Clone the Repository to Your Local Machine

git clone https://github.com/ASHUTOSH-SG/lab4.git
cd lab4
Step 4: Modify the results.txt File Locally

Step 5: Stage, Commit, and Push Changes to GitHub

check the status of the repository
git status
Stage the changes
git add results.txt
Commit the changes
git commit -m "Updated content in results.txt"
Push the changes
git push origin main
Why Conflicts Happen
 Simultaneous Edits: Two people editing the same part of the file.

How to Resolve Conflicts
1. Identify the Conflicted File: Git tells you which files are in conflict.
2. Manually Edit: Open the file, decide which changes to keep, and remove the
conflict markers.
3. Stage the Resolved File: Use git add to mark it as resolved.
4. Commit: Commit your resolution with a message like "Resolved conflict".
5. Push: Finally, push the resolved changes to GitHub.
-----------------------------------------------------------------------------------------------------------


Q2
Create a local repository in a directory named hpcsa. Create a file and commit. Create
a new repository on Github by name demo1. Link the local repository to the remote
repository. Perform git pull. Create a new file by name index.html on local repository
and then push it to the remote demo1 repostiroty.

Step 1: Create and initialize a local repository
mkdir hpcsa
cd hpcsa
git init

Step 2: Create a file and commit
echo "Initial file content" > file.txt
git add file.txt
git commit -m "Initial commit with file.txt"

Step 3: Create a GitHub repository
# (Do this on GitHub)

Step 4: Link the local repository to the remote
git remote add origin https://github.com/your-username/demo1.git

Step 5: Pull remote changes
git pull origin main

Step 6: Create a new file (index.html)
echo "<!DOCTYPE html><html><head><title>Demo</title></head><body><h1>Welcome
to Demo1</h1></body></html>" > index.html
git add index.html
git commit -m "Add index.html"

Step 7: Push the file to GitHub
git push origin main
----------------------------------------------------------------------------


Q3
Create a container using ubuntu image. Install python in it. Save the container as a
image. Delete earlier container. Create a new container and run python in it.

# Step 1: Pull Ubuntu image
docker pull ubuntu

# Step 2: Create and start the container
docker run -it ubuntu

Install Python in the container

apt update
apt install python3 -y
python3 --version # Verify Python installation

Exit the container
exit

Step 3: Save the container as a new image
docker ps -a # Find container ID
docker commit container_id ubuntu_with_python

Step 4: Remove the old container
docker rm container_id

Step 5: Create a new container from the saved image
docker run -it ubuntu_with_python

Verify Python in the new container
python3 –version
--------------------------------------------------------------------------------------



Q4
Create a container using httpd image. Map outside port 9000. open localhost:9000 on
your docker machine. It should display It Works message.
Pull the httpd image
docker pull httpd

Run the httpd containe
docker run -d -p 9000:80 --name my_httpd httpd

http://localhost:9000
